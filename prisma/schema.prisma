// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountStatus {
  // User has registered and verified their email
  ENABLED
  // User has been disabled and can't login anymore
  DISABLED
  // User did register, but has not verified their email yet.
  NOT_VERIFIED
}

enum UserRole {
  APP
  ADMIN
}

model User {
  id                String        @id @default(cuid())
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  name              String?
  email             String        @unique
  accountStatus     AccountStatus @default(NOT_VERIFIED)
  profilePictureUrl String?

  authorizations UserRole[] @default([APP])
  language       String     @default("en")

  lastLoginAt DateTime?

  // Relations
  Session Session[]
  oauth   OAuthAccount[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model OAuthAccount {
  providerId     String
  providerUserId String
  accessToken    String
  refreshToken   String?
  expiresAt      DateTime?
  userId         String
  user           User      @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@id([providerId, providerUserId])
}

model VerificationToken {
  userId        String
  code          String
  token         String   @unique
  expires       DateTime
  lastAttemptAt DateTime @updatedAt
  attempts      Int      @default(0)
  // Useful to change the user email. This model will contains the next user
  // email, waiting for the user to validate it.
  email         String?
}

model Repository {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @unique
  link        String
  description String?
}
